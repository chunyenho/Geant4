//
// ********************************************************************
// * License and Disclaimer                                           *
// *                                                                  *
// * The  Geant4 software  is  copyright of the Copyright Holders  of *
// * the Geant4 Collaboration.  It is provided  under  the terms  and *
// * conditions of the Geant4 Software License,  included in the file *
// * LICENSE and available at  http://cern.ch/geant4/license .  These *
// * include a list of copyright holders.                             *
// *                                                                  *
// * Neither the authors of this software system, nor their employing *
// * institutes,nor the agencies providing financial support for this *
// * work  make  any representation or  warranty, express or implied, *
// * regarding  this  software system or assume any liability for its *
// * use.  Please see the license in the file  LICENSE  and URL above *
// * for the full disclaimer and the limitation of liability.         *
// *                                                                  *
// * This  code  implementation is the result of  the  scientific and *
// * technical work of the GEANT4 collaboration.                      *
// * By using,  copying,  modifying or  distributing the software (or *
// * any work based  on the software)  you  agree  to acknowledge its *
// * use  in  resulting  scientific  publications,  and indicate your *
// * acceptance of all terms of the Geant4 Software license.          *
// ********************************************************************
//
//
// $Id: G4LPhysicsFreeVector.icc 67970 2013-03-13 10:10:06Z gcosmo $
//
// 
// ------------------------------------------------------------------
//
// Class G4LPhysicsFreeVector -- source file
//
// Derived from base class G4PhysicsVector
// This is a free vector for Low Energy Physics cross section data.
// The class name includes an "L" to distinguish it from other groups
// who may wish to implement a free vector in a different way.
// A subdivision method is used to find the energy|momentum bin.
//
// F.W. Jones, TRIUMF, 04-JUN-96
// --------------------------------------------------------------------------

inline
void G4LPhysicsFreeVector::PutValues(size_t binNumber,
                                     G4double binValue, G4double dataValue)
  // G4PhysicsVector has PutValue() but it is inconvenient.
  // Want to simultaneously fill the bin and data vectors.
{
   binVector[binNumber] = binValue;
   dataVector[binNumber] = dataValue;
   if(binNumber == 0)
     { edgeMin = binValue; }
   else if( numberOfNodes - 1 == binNumber)
     { edgeMax = binValue; }
}

